---
layout: base
---

<style>
  table {
    display: inline-table;
    border-spacing: 0.25em 0;
    font-variant-numeric: tabular-nums;
  }
  th,
  td {
    padding: 0 0.5ch 0 0;
  }

  dl {
    margin: 1em 1em 1px; /* 1px is to align with the 1px padding of table cells */
  }
  dt {
    font-weight: 700;
  }
  dd {
    margin-left: 2ch;
  }

  .mon_header {
    margin-bottom: 0;
    padding: 0;
    line-height: 0;
    width: fit-content;
  }
  
  .mon_header > a {
    color: #fff;
    text-decoration-thickness: 1px;
    display: block;
    line-height: 1.5em;
    clip-path: polygon(0 0, 100% 0, 100% 0.75em, 0 2.25em);
    /* set up such that:
    - all the top-left chicanery is blocked
    - the longest possible name ("Mega Crabominable") is still legible
    - proportions I think are stylish
    - otherwise minimal image blocking
    */
    padding: 0 0 0.75em 0.25em;
    margin-bottom: -1.51em; /* some nasty not-quite-pixel-perfect rounding */
    background-image: linear-gradient(90deg, #0008, #fff2); /* a11y */
  }

  @media (max-width: 420px) { /* haha funni weed number */
    .mon_header > a {
      clip-path: polygon(0 0, 100% 0, 100% calc(1.9em - 7vw), 0 2.25em); /* eyeballed to keep responsive */
    }
  }

  .mon_pic {
    width: 400px;
    max-width: 100%;
    height: auto;
  }

  @media (min-width: 45em) {
    .mon_header {
      float: left;
      clear: both; /* TODO until I make that <details>/<summary> swapper for multi-images, or whatever */
      margin: 0 1em 0.5em 0;
    }
    .mon::after {
      content: "";
      display: block;
      clear: both; /* hopefully this cuts down on layout costs. Hopefully. */
    }
    .mon_moves {
      clear: both; /* this too, since otherwise the tables participate in the multi-step float flow */
    }
  }

  .mon_entry {
    max-width: 55em;
    margin: 0 0.5em 0.5em;
  }

  .mon_data {
    display: inline-block;
  }

  .mon_stats {
    text-align: right;
  }

  .mon_abilities,
  .mon_info,
  .mon_stats {
    vertical-align: top;
    display: inline-block;
    margin: 0.5em;
  }

  .mon_info > dd,
  .mon_info > dt {
    display: inline;
  }

  .mon_info > dd {
    margin-left: 0;
  }

  .mon_info > dd::before {
    content: " ";
  }

  .mon_info > dd::after {
    content: "";
    display: block;
  }

  .moves_heading {
    margin: 0.5em 0 0.5em 0.5rem;
    flex-basis: 100%;
  }

  .moves_table {
    border-spacing: 0.5em 0;
    margin-bottom: 1em;
  }

  .moves_table > tbody {
    vertical-align: top;
  }

  .moves_table th:first-child {
    text-align: right;
  }

  .mon_moves {
    display: flex;
    flex-wrap: wrap;
    align-items: flex-start;
    margin-bottom: 0.5em;
  }

  .tutor-moves {
    flex: 1;
  }

  .tutor-moves_heading {
    margin: 0;
  }

  .tutor-moves_list {
    margin: 0;
    padding: 0 0 0 1.5ch;
    columns: 8em;
    max-width: 40em;
  }

  li { /* specifically fixes a problem with CSS multicolumn, but good for printing too */
    break-inside: avoid;
  }
</style>

{{{content}}}